# 最小允许peer数
min_peers = 3
# 最大允许peer数
max_peers = 5000
# 最大同时上传用户数
max_uploads = 60
# 最大下载950k/s  光纤用户使用,adsl请酌情修改
# download_rate = 950
# 最大上传200k/s  光纤用户使用,adsl请酌情修改
# upload_rate = 6

# 下载目录
directory = ~/Downloads/BT
# 下载历史目录（此目录中包括下载进度信息和DHT节点缓存）
session = ~/Downloads/BT/.session
#（配置自动监视,把bt种子扔进～/universe目录就自动下载）
schedule = watch_directory,5,5,load_start="~/Downloads/BT/watch/*.torrent"
#（配置自动监视,把bt种子从～/universe目录拿走就自动停止下载） 
#schedule = untied_directory,5,5, stop_untied=
#硬盘空间低于100M就自动停止一切下载）
#schedule = low_diskspace,5,60,close_low_diskspace=100M
#（在总上传量达到200M的情况下上传/下载率达到200%,或者在总上传量不足200M情况下上传/下载率达到2000%,则停止上传）
#schedule = ratio,60,60,"stop_on_ratio=10,20M,200"

# 设置代理
#http_proxy = 127.0.0.1:8118
#socks_proxy = 127.0.0.1:7070
#set_socks_proxy=5

#bt监听端口
port_range = 9400-9500
#随机从上面范围内选择端口
port_random = yes
######开启DHT######
dht = on
#DHT所用的UDP端口
dht_port = 9501
#种子交换功能
peer_exchange = yes

#（上传缓存,每个种子10M,小内存用户请酌情修改）
#send_buffer_size = 10000
#（下载缓存,每个种子20M,小内存用户请酌情修改）
#receive_buffer_size = 20M
#(修改编码以避免中文乱码）
encoding_list=UTF-8

# 下载完成时进行校验。 也许在造成磁盘空间不足这一 bug 被有效的改变之前，这一选项都将非常有效。
check_hash = yes

# 加密选项，设为0（默认情况）或下面的任何一个：
# allow_incoming, try_outgoing, require, require_RC4, enable_retry, prefer_plaintext
#
# 如下例中的值将允许将接入连接加密，开始时以非加密方式作为连接的输出方式，
# 如行不通则以加密方式进行重试，在加密握手后，优先选择将纯文本以 RC4 加密
#
# encryption = allow_incoming,enable_retry,prefer_plaintext
#encryption = allow_incoming,try_outgoing,enable_retry
encryption = require,require_RC4,allow_incoming,try_outgoing

#scgi_port = localhost:5000

#Options: done_fg_color, done_bg_color, active_fg_color, active_bg_color
#Colors: 0 = black 1 = red 2 = green 3 = yellow 4 = blue 5 = magenta 6 = cyan 7 = white
#
#done_fg_color = 5
#active_fg_color = 2


# vim: ft=conf
